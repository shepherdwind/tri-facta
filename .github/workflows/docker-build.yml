name: Docker Build and Push

on:
  push:
    branches: ['main']
    tags:
      - 'v*'
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check version change
        id: check-version
        run: |
          # 获取上一次提交的版本号
          git fetch origin main
          git checkout HEAD^ package.json || true
          OLD_VERSION=$(node -p "require('./package.json').version" || echo "none")
          git checkout HEAD package.json

          # 比较版本号
          if [ "$OLD_VERSION" = "${{ steps.package-version.outputs.version }}" ]; then
            echo "Version unchanged, skipping build"
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "Version changed from $OLD_VERSION to ${{ steps.package-version.outputs.version }}, proceeding with build"
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.check-version.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: steps.check-version.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: steps.check-version.outputs.should_build == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.package-version.outputs.version }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long

      - name: Build and push Docker image
        if: steps.check-version.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
